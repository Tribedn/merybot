from botcfg import bot
from dp import *
import string
import random
from datetime import datetime
from telebot.types import InlineKeyboardMarkup, InlineKeyboardButton

def escape_markdown(text):
    """–ï–∫—Ä–∞–Ω—É—î —Å–ø–µ—Ü—ñ–∞–ª—å–Ω—ñ —Å–∏–º–≤–æ–ª–∏ –¥–ª—è Markdown"""
    special_chars = ['_', '*', '[', ']', '(', ')', '~', '`', '>', '#', '+', '-', '=', '|', '{', '}', '.', '!']
    for char in special_chars:
        text = text.replace(char, f'\\{char}')
    return text

def generate_password(length=32):
    """–ì–µ–Ω–µ—Ä—É—î —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π –ø–∞—Ä–æ–ª—å –∑–∞–¥–∞–Ω–æ—ó –¥–æ–≤–∂–∏–Ω–∏"""
    characters = string.ascii_letters + string.digits + string.punctuation
    while True:
        password = ''.join(random.choice(characters) for _ in range(length))
        # –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —á–∏ –ø–∞—Ä–æ–ª—å —É–Ω—ñ–∫–∞–ª—å–Ω–∏–π
        cur_bot.execute("SELECT COUNT(*) FROM user_passwords WHERE password = ?", (password,))
        if cur_bot.fetchone()[0] == 0:
            return password

def save_password(user_id, password):
    """–ó–±–µ—Ä—ñ–≥–∞—î –ø–∞—Ä–æ–ª—å –≤ –±–∞–∑—É –¥–∞–Ω–∏—Ö"""
    cur_bot.execute("INSERT INTO user_passwords (user_id, password) VALUES (?, ?)", 
                   (user_id, password))
    conn_bot.commit()

def get_user_passwords(user_id):
    """–û—Ç—Ä–∏–º—É—î –≤—Å—ñ –ø–∞—Ä–æ–ª—ñ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞"""
    cur_bot.execute("SELECT password, created_at FROM user_passwords WHERE user_id = ? ORDER BY created_at DESC", 
                   (user_id,))
    return cur_bot.fetchall()

def create_length_keyboard():
    """–°—Ç–≤–æ—Ä—é—î –∫–ª–∞–≤—ñ–∞—Ç—É—Ä—É –∑ –≤–∏–±–æ—Ä–æ–º –¥–æ–≤–∂–∏–Ω–∏ –ø–∞—Ä–æ–ª—è"""
    keyboard = InlineKeyboardMarkup()
    keyboard.add(
        InlineKeyboardButton("8 —Å–∏–º–≤–æ–ª—ñ–≤", callback_data="length_8"),
        InlineKeyboardButton("16 —Å–∏–º–≤–æ–ª—ñ–≤", callback_data="length_16"),
        InlineKeyboardButton("24 —Å–∏–º–≤–æ–ª–∏", callback_data="length_24"),
        InlineKeyboardButton("32 —Å–∏–º–≤–æ–ª–∏", callback_data="length_32")
    )
    return keyboard

@bot.message_handler(commands=['generate'])
def generate_password_command(message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /generate"""
    bot.reply_to(message, "–í–∏–±–µ—Ä—ñ—Ç—å –¥–æ–≤–∂–∏–Ω—É –ø–∞—Ä–æ–ª—è:", reply_markup=create_length_keyboard())

@bot.callback_query_handler(func=lambda call: call.data.startswith('length_'))
def handle_length_selection(call):
    """–û–±—Ä–æ–±–Ω–∏–∫ –≤–∏–±–æ—Ä—É –¥–æ–≤–∂–∏–Ω–∏ –ø–∞—Ä–æ–ª—è"""
    length = int(call.data.split('_')[1])
    password = generate_password(length)
    save_password(call.from_user.id, password)
    
    # –§–æ—Ä–º–∞—Ç—É—î–º–æ –ø–∞—Ä–æ–ª—å –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ
    formatted_password = f"üîë –ü–∞—Ä–æ–ª—å ({length} —Å–∏–º–≤–æ–ª—ñ–≤):\n\n{password}\n\nüìù –ó–±–µ—Ä–µ–∂–µ–Ω–æ –≤ –±–∞–∑—ñ –¥–∞–Ω–∏—Ö"
    
    bot.edit_message_text(
        chat_id=call.message.chat.id,
        message_id=call.message.message_id,
        text=formatted_password
    )

@bot.message_handler(commands=['passlist'])
def list_passwords_command(message):
    """–û–±—Ä–æ–±–Ω–∏–∫ –∫–æ–º–∞–Ω–¥–∏ /passlist"""
    passwords = get_user_passwords(message.from_user.id)
    if not passwords:
        bot.reply_to(message, "–£ –≤–∞—Å —â–µ –Ω–µ–º–∞—î –∑–±–µ—Ä–µ–∂–µ–Ω–∏—Ö –ø–∞—Ä–æ–ª—ñ–≤")
        return
    
    response = "üìã –°–ø–∏—Å–æ–∫ –≤–∞—à–∏—Ö –ø–∞—Ä–æ–ª—ñ–≤:\n\n"
    for i, (password, created_at) in enumerate(passwords, 1):
        # –§–æ—Ä–º–∞—Ç—É—î–º–æ –¥–∞—Ç—É –¥–ª—è –∫—Ä–∞—â–æ—ó —á–∏—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç—ñ
        date_str = datetime.strptime(created_at, "%Y-%m-%d %H:%M:%S").strftime("%d.%m.%Y %H:%M")
        response += f"üîë –ü–∞—Ä–æ–ª—å #{i} (—Å—Ç–≤–æ—Ä–µ–Ω–æ {date_str}):\n{password}\n\n"
    
    bot.reply_to(message, response)

